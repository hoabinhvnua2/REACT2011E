  - Array: là một mảng chứa các item, chỉ số của nó bắt bằng số 0
        var arr = [1];
        var arr1 = new Array();
        var daChieu = [1,2, [6,7,8], [3,5]];

    - Một số phương thức trong mảng
        // thêm/xóa phần tử trong mảng
        + push(): thêm phần tử vào cuối mảng
        + pop(): xóa phần tử trong mảng
        + unshift(): thêm phần tử vào vị trí đầu tiên trong mảng
        + shift(): xóa phần tử đầu tiên trong mảng
        + splice(): xóa phần tử trong mảng, nó nhận vào 3 tham số 
            thứ 1: là vị trí bắt đầu của item cần xóa
            thứ 2: số lượng cần xóa
            thứ 3: bổ sung item cho mảng vừa xóa
        + slice(): trả về 1 bản sao, nhận vào 2 tham số start và end
        + concat(): gộp các mảng lại với nhau và tạo ra 1 mảng mới ko ảnh hưởng tới các mảng cũ
       // tìm kiểm phần tử trong mảng
        + indexOf/lastIndexOf: trả về giá trị đầu tìm thấy/ trả về giá trị cuối cùng tìm thấy
        + includes: trả về true nếu có giá trị và trả về false nếu ko co giá trị
        + find/findIndex: find thì tìm giá trị của phần tử còn findIndex thì tìm vị trí của phần tử
            find(item, index, array): nó sẽ dừng lại khi gặp item đầu tiên thỏa mãn điều kiện,
                 item là phần tử, index là vị trí của phần tử, array là mảng đang thực hiện
            findIndex(item, index, array): item là phần tử, index là vị trí của phần tử, array là mảng đang thực hiện
        + filter: trả về 1 mảng các item thỏa mãn điều kiện
             item là phần tử, index là vị trí của phần tử, array là mảng đang thực hiện
        //Lặp mảng:
        + forEach: Lặp qua từng phần tử của mảng và thực hiện 1 việc nào đó với từng phần tử
        // chuyển đổi mảng
        + sort: sắp sếp lại các phần tử trong mảng (chú ý: kết quả sắp xếp có thể ko đưuọc ổn định)
        + map: lặp qua từng phần tử và trả về mảng mới (item, index)
        + reverse: dùng để đảo mảng
        + reduce: 
            accumulator: kết quả của hàm gọi lần trước, giá trị ban đầu là innital
            item: phần tử trong mảng
            index: vị trí của phần tử đó
            array: mảng

        + split: Phân tách chuỗi thành 1 mảng ký tự được phân cách bởi dấu mà người dùng truyền vào hàm
        + join: thì nó ngược lại với split
        -> để các kiểm tra xem 1 biến có phải là mảng hay ko thì isArray()


- Phép toán:
    + phép cộng: +(đặc biệt)
    + phép trừ: -
    + phép nhân: *
    + phép chia: /
    + phép chia lấy dư: %
- Toán tứ logic:
    + so sánh bằng: ==(chỉ so sánh về giá trị) hoặc ===(so sánh cả giá trị và type của giá trí)
    + so sánh lớn hớn hoặc bằng: =>
    + so sánh lớn hớn hoặc bằng: =>
    + phủ định: != hoặc !==
    + OR: ||, nullish ??
    + AND: &&

- Hàm: là các khối lệnh, no góp phần xây dựng lên ccs khối chương trình và cho phép được gọi 
    nhiều lần mà ko lặp lại đoạn code đó
    + có mấy cách để khai báo hàm
        dùng từ khóa function nameFunction() {}
        var nameFunction = function() {

        }

    + hàm có tham số truyền vào: mục đích để làm động
    + giá trị mặc định
-> Tổng kết các phần lý thuyết:
    - Cấu trúc code
    - Các hàm tương tác: alert, prompt, confirm
    - Chế đệ nghiêm ngặt: strict mode
    - Biến: var, let, const và function scope, block scope
    - Toán tử và phép Toán
    - Kiểu dữ liệu: sting, number, array...
    - Vòng lặp
    - Điều kiện rẽ nhánh
    - Hàm

-> buổi tới chúng ta học gì?
    - Object trong js: là gì, cách khởi tạo?
    - Class trong js: 
    - Hàm nâng cao: đệ quy và arrow function

- Bài tập:
    Cho một mảng giá trị như sau [1, 2, 3, 4, 5]:
        a, tính tổng giá trị của mảng bằng 2 cách
        b, in ra sô nhỏ nhất của mảng
        c, in ra số lớn nhất của mảng
        d, sắp xếp lại mảng
        e, in ra các số chẵn
        f, in ra cá số lẻ
        g, in ra mảng mới có giá trị gấp 2 mảng hiện tại